name: Java CI with Gradle, Docker and Kubernetes

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Run unit tests
      run: ./gradlew test

    - name: Authenticate with Docker registry
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image with Jib
      run: ./gradlew jib --image tons/whoami-mn:ci

    - name: Integration test Docker image
      run: |
        set -x

        docker run -d -p 8080:8080 --name whoami-mn tons/whoami-mn:ci
        sleep 3

        docker ps | grep -q whoami-mn

        http_code=$(curl -s -o /dev/null -w "%{http_code}" 127.0.0.1:8080)
        test $http_code -eq 200

        status=$(curl -s 127.0.0.1:8080/health | jq -r '.status')
        test $status = "UP"

    - name: Lint Helm Chart
      uses: WyriHaximus/github-action-helm3@v2
      with:
        exec: helm lint src/main/helm/

    - name: Deploy to Kubernetes
      uses: WyriHaximus/github-action-helm3@v2
      with:
        exec: helm --kube-context nuc upgrade --install --set image.name=tons/whoami-mn:ci --set image.pullPolicy=Always --namespace whoami-mn-dev whoami-mn src/main/helm/
        kubeconfig: '${{ secrets.KUBE_CONFIG }}'
